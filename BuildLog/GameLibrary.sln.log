生成启动时间为 2021/10/16 21:27:21。
日志记录详细程度设置为: Detailed。     0>进程 = "/Library/Frameworks/Mono.framework/Versions/6.12.0/bin/mono-sgen64"
       MSBuild 可执行文件路径 = "/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/MSBuild.dll"
       命令行参数 = "/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/15.0/bin/MSBuild.dll /m /nologo /noconsolelogger /p:Configuration=Debug /flp:LogFile=/Users/bytedance/Documents/GitHub/GameDemo/./Tools/Batch/../../BuildLog/GameLibrary.sln.log;Encoding=UTF-8 /t:clean;rebuild /Users/bytedance/Documents/GitHub/GameDemo/./Tools/Batch/../../GameLibrary/GameLibrary.sln "/p:Platform=Any CPU""
       当前目录 = "/Users/bytedance/Documents/GitHub/GameDemo"
       MSBuild 版本 = "16.9.0"
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”在节点 1 上(clean;rebuild 个目标)。
     1>正在使用工具版本“Current”进行生成。
     1>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”的文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln.metaproj”中的目标“ValidateSolutionConfiguration”(入口点):
       由于 false 条件，已跳过任务“Error”；(('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' != 'true'))计算为(('<SolutionConfiguration>
         <ProjectConfiguration Project="{1C8280CD-EB93-4849-940E-A99EDDF811D6}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         <ProjectConfiguration Project="{F5FC4012-CE76-4AD8-B04A-25B1A0BF7EEC}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         <ProjectConfiguration Project="{F1D962E1-3B17-4597-B542-BCB657E75829}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
       </SolutionConfiguration>' == '') and ('' != 'true'))。
       由于 false 条件，已跳过任务“Warning”；(('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' == 'true'))计算为(('<SolutionConfiguration>
         <ProjectConfiguration Project="{1C8280CD-EB93-4849-940E-A99EDDF811D6}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         <ProjectConfiguration Project="{F5FC4012-CE76-4AD8-B04A-25B1A0BF7EEC}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         <ProjectConfiguration Project="{F1D962E1-3B17-4597-B542-BCB657E75829}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
       </SolutionConfiguration>' == '') and ('' == 'true'))。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         正在生成解决方案配置“Debug|Any CPU”。
       已完成执行任务“Message”的操作。
     1>已完成在项目“GameLibrary.sln”中生成目标“ValidateSolutionConfiguration”的操作。
     1>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”的文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln.metaproj”中的目标“ValidateToolsVersions”(入口点):
       由于 false 条件，已跳过任务“Error”；('$(MSBuildToolsVersion)' == '2.0' and ('$(ProjectToolsVersion)' != '2.0' and '$(ProjectToolsVersion)' != ''))计算为('Current' == '2.0' and ('' != '2.0' and '' != ''))。
     1>已完成在项目“GameLibrary.sln”中生成目标“ValidateToolsVersions”的操作。
     1>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”的文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln.metaproj”中的目标“ValidateProjects”(入口点):
       由于 false 条件，已跳过任务“Message”；( ('$(Configuration)' == 'Debug') and ('$(Platform)' == 'x86') )计算为( ('Debug' == 'Debug') and ('Any CPU' == 'x86') )。
       由于 false 条件，已跳过任务“Message”；( ('$(Configuration)' == 'Release') and ('$(Platform)' == 'x86') )计算为( ('Debug' == 'Release') and ('Any CPU' == 'x86') )。
     1>已完成在项目“GameLibrary.sln”中生成目标“ValidateProjects”的操作。
     1>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”的文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln.metaproj”中的目标“Clean”(入口点):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
         全局属性:
           BuildingSolutionFile=true
           CurrentSolutionConfigurationContents=<SolutionConfiguration>
           <ProjectConfiguration Project="{1C8280CD-EB93-4849-940E-A99EDDF811D6}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
           <ProjectConfiguration Project="{F5FC4012-CE76-4AD8-B04A-25B1A0BF7EEC}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
           <ProjectConfiguration Project="{F1D962E1-3B17-4597-B542-BCB657E75829}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         </SolutionConfiguration>
           SolutionDir=/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/
           SolutionExt=.sln
           SolutionFileName=GameLibrary.sln
           SolutionName=GameLibrary
           SolutionPath=/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
     0>“Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.props
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Current/Microsoft.Common.props (55,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/”(先前值:“obj/”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Imports/Microsoft.Common.props/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       “Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (143,5) 处重新分配属性: $(_DebugFileExt)=“.pdb”(先前值:“”)
       “Platform”属性是全局属性，不能修改。
       “Configuration”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (163,5) 处重新分配属性: $(OutputPath)=“bin/Debug/”(先前值:“bin\Debug\”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (168,5) 处重新分配属性: $(IntermediateOutputPath)=“obj/Debug/”(先前值:“obj/Debug”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (182,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (191,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       “SolutionName”属性是全局属性，不能修改。
       “SolutionFileName”属性是全局属性，不能修改。
       “SolutionPath”属性是全局属性，不能修改。
       “SolutionDir”属性是全局属性，不能修改。
       “SolutionExt”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (508,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“AnyCPU”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (562,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets (75,5) 处重新分配属性: $(ResolveReferencesDependsOn)=“
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ImplicitlyExpandDesignTimeFacades
           ”(先前值:“
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets (24,9) 处重新分配属性: $(GenerateManifestsDependsOn)=“”(先前值:“
             SetWin32ManifestProperties;
             GenerateApplicationManifest;
             GenerateDeploymentManifest
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportAfter/*
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (67,5) 处重新分配属性: $(MSBuildAllProjects)=“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets”(先前值:“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (173,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (174,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“ResolveNuGetPackageAssets;
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (255,5) 处重新分配属性: $(_HandlePackageFileConflictsAfter)=“ResolveNuGetPackageAssets;ResolveNuGetPackageAssetsNonAOT”(先前值:“ResolveNuGetPackageAssets”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveNativeReferences”。
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateManifests”。
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2) (Clean 个目标)。
     2>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       由于条件的计算结果为 false，已跳过目标“EnableIntermediateOutputPathMismatchWarning”；('$(RestoreProjectStyle)' == 'PackageReference')的计算结果为('' == 'PackageReference')。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“BeforeClean”依赖于它):
       由于 false 条件，已跳过任务“Error”；( '$(_InvalidConfigurationError)' == 'true' )计算为( '' == 'true' )。
       由于 false 条件，已跳过任务“Warning”；( '$(_InvalidConfigurationWarning)' == 'true' )计算为( '' == 'true' )。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         Configuration=Debug
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=AnyCPU
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Error”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('bin/Debug/' != '' and !HasTrailingSlash('bin/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('obj/Debug/' != '' and !HasTrailingSlash('obj/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj/' != '' and !HasTrailingSlash('obj/'))。
       由于 false 条件，已跳过任务“Error”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/' != '' And '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/' )。
       由于 false 条件，已跳过任务“Warning”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( '' == 'true' And 'obj/' != 'obj/' And 'obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/' )。
     2>已完成在项目“StoryScript.csproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeClean”(目标“Clean”依赖于它):
     2>已完成在项目“StoryScript.csproj”中生成目标“BeforeClean”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/StoryScript.csproj.UnmanagedRegistration.cache'))。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreClean”(目标“Clean”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Delete”任务。
       任务“Delete”
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ReadLinesFromFile”任务。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindUnderPath”任务。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Common.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Dsl.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/LitJson.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/UnityEngine.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Common.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Dsl.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.csproj.AssemblyReference.cache”。
         文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.csproj.CoreCompileInputs.cache”不存在。正在跳过。
         文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.csproj.CopyComplete”不存在。正在跳过。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.pdb”。
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“RemoveDuplicates”任务。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MakeDir”任务。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“WriteLinesToFile”任务。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
     2>已完成在项目“StoryScript.csproj”中生成目标“CoreClean”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignProjectConfiguration”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignProjectConfiguration”任务。
       任务“AssignProjectConfiguration”
         已为项目引用“../Common/Common.csproj”指定了“Debug|AnyCPU”配置。
       已完成执行任务“AssignProjectConfiguration”的操作。
     2>已完成在项目“StoryScript.csproj”中生成目标“AssignProjectConfiguration”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为(''=='true' and '../Common/Common.csproj'!='')。
     2>已完成在项目“StoryScript.csproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
     2>已完成在项目“StoryScript.csproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除属性:
           TargetFramework
           RuntimeIdentifier
     0>将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.props
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Current/Microsoft.Common.props (55,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/”(先前值:“obj/”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Imports/Microsoft.Common.props/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       “Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       “Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (143,5) 处重新分配属性: $(_DebugFileExt)=“.pdb”(先前值:“”)
       “Platform”属性是全局属性，不能修改。
       “Configuration”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (163,5) 处重新分配属性: $(OutputPath)=“bin/Debug/”(先前值:“bin\Debug\”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (168,5) 处重新分配属性: $(IntermediateOutputPath)=“obj/Debug/”(先前值:“obj/Debug”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (182,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (191,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       “SolutionName”属性是全局属性，不能修改。
       “SolutionFileName”属性是全局属性，不能修改。
       “SolutionPath”属性是全局属性，不能修改。
       “SolutionDir”属性是全局属性，不能修改。
       “SolutionExt”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (522,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (562,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets (75,5) 处重新分配属性: $(ResolveReferencesDependsOn)=“
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ImplicitlyExpandDesignTimeFacades
           ”(先前值:“
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets (24,9) 处重新分配属性: $(GenerateManifestsDependsOn)=“”(先前值:“
             SetWin32ManifestProperties;
             GenerateApplicationManifest;
             GenerateDeploymentManifest
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportAfter/*
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (67,5) 处重新分配属性: $(MSBuildAllProjects)=“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets”(先前值:“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (173,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (174,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“ResolveNuGetPackageAssets;
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (255,5) 处重新分配属性: $(_HandlePackageFileConflictsAfter)=“ResolveNuGetPackageAssets;ResolveNuGetPackageAssetsNonAOT”(先前值:“ResolveNuGetPackageAssets”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.props
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Current/Microsoft.Common.props (55,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/”(先前值:“obj/”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Imports/Microsoft.Common.props/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       “Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       “Configuration”属性是全局属性，不能修改。
       “Platform”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportBefore/*
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveNativeReferences”。
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateManifests”。
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 2 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3) (Clean 个目标)。
     3>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
     0>在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (143,5) 处重新分配属性: $(_DebugFileExt)=“.pdb”(先前值:“”)
       “Platform”属性是全局属性，不能修改。
       “Configuration”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (163,5) 处重新分配属性: $(OutputPath)=“bin/Debug/”(先前值:“bin\Debug\”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (168,5) 处重新分配属性: $(IntermediateOutputPath)=“obj/Debug/”(先前值:“obj/Debug”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (182,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (191,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       “SolutionName”属性是全局属性，不能修改。
       “SolutionFileName”属性是全局属性，不能修改。
       “SolutionPath”属性是全局属性，不能修改。
       “SolutionDir”属性是全局属性，不能修改。
       “SolutionExt”属性是全局属性，不能修改。
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (508,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“AnyCPU”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets (562,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets (75,5) 处重新分配属性: $(ResolveReferencesDependsOn)=“
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ImplicitlyExpandDesignTimeFacades
           ”(先前值:“
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             ResolveComReferences;
             AfterResolveReferences
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets (24,9) 处重新分配属性: $(GenerateManifestsDependsOn)=“”(先前值:“
             SetWin32ManifestProperties;
             GenerateApplicationManifest;
             GenerateDeploymentManifest
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
       尝试使用扩展路径 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild 导入 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/$(MSBuildToolsVersion)/Microsoft.Common.targets/ImportAfter/*
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (67,5) 处重新分配属性: $(MSBuildAllProjects)=“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets”(先前值:“;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (173,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (174,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“ResolveNuGetPackageAssets;
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
     3>由于条件的计算结果为 false，已跳过目标“EnableIntermediateOutputPathMismatchWarning”；('$(RestoreProjectStyle)' == 'PackageReference')的计算结果为('' == 'PackageReference')。
     0>在 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets (255,5) 处重新分配属性: $(_HandlePackageFileConflictsAfter)=“ResolveNuGetPackageAssets;ResolveNuGetPackageAssetsNonAOT”(先前值:“ResolveNuGetPackageAssets”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“BeforeClean”依赖于它):
     3>由于 false 条件，已跳过任务“Error”；( '$(_InvalidConfigurationError)' == 'true' )计算为( '' == 'true' )。
       由于 false 条件，已跳过任务“Warning”；( '$(_InvalidConfigurationWarning)' == 'true' )计算为( '' == 'true' )。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         Configuration=Debug
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=AnyCPU
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Error”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('bin/Debug/' != '' and !HasTrailingSlash('bin/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('obj/Debug/' != '' and !HasTrailingSlash('obj/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj/' != '' and !HasTrailingSlash('obj/'))。
       由于 false 条件，已跳过任务“Error”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/' != '' And '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/' )。
       由于 false 条件，已跳过任务“Warning”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( '' == 'true' And 'obj/' != 'obj/' And 'obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/' )。
     3>已完成在项目“GameKernel.csproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeClean”(目标“Clean”依赖于它):
     3>已完成在项目“GameKernel.csproj”中生成目标“BeforeClean”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/GameKernel.csproj.UnmanagedRegistration.cache'))。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreClean”(目标“Clean”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Delete”任务。
       任务“Delete”
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ReadLinesFromFile”任务。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindUnderPath”任务。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/GameKernel.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/GameKernel.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Common.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Dsl.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/LitJson.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEngine.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEngine.UI.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEditor.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Common.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Dsl.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/StoryScript.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/StoryScript.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.csproj.CoreCompileInputs.cache”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.csproj.CopyComplete”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.csproj.AssemblyReference.cache”。
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“RemoveDuplicates”任务。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MakeDir”任务。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“WriteLinesToFile”任务。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
     3>已完成在项目“GameKernel.csproj”中生成目标“CoreClean”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignProjectConfiguration”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignProjectConfiguration”任务。
       任务“AssignProjectConfiguration”
         已为项目引用“../../Infrastructure/Common/Common.csproj”指定了“Debug|AnyCPU”配置。
         已为项目引用“../../Infrastructure/StoryScript/StoryScript.csproj”指定了“Debug|AnyCPU”配置。
       已完成执行任务“AssignProjectConfiguration”的操作。
     3>已完成在项目“GameKernel.csproj”中生成目标“AssignProjectConfiguration”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为(''=='true' and '../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj'!='')。
     3>已完成在项目“GameKernel.csproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
     3>已完成在项目“GameKernel.csproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
         全局属性:
     0>正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveNativeReferences”。
     3>_GetProjectReferenceTargetFrameworkProperties:
           Configuration=Debug
     0>正在使用项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”重写项目“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateManifests”。
     3>_GetProjectReferenceTargetFrameworkProperties:
           Platform=AnyCPU
         移除属性:
           TargetFramework
           RuntimeIdentifier
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4) (Clean 个目标)。
     4>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       由于条件的计算结果为 false，已跳过目标“EnableIntermediateOutputPathMismatchWarning”；('$(RestoreProjectStyle)' == 'PackageReference')的计算结果为('' == 'PackageReference')。
     3>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:2) (GetTargetFrameworks 个目标)。
   2:2>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   2:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”(目标“GetTargetFrameworks”依赖于它):
   2:2>已完成在项目“StoryScript.csproj”中生成目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”的操作。
   2:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworks”(入口点):
       由于 false 条件，已跳过任务“Error”；('$(IsCrossTargetingBuild)' == 'true')计算为('' == 'true')。
   2:2>已完成在项目“StoryScript.csproj”中生成目标“GetTargetFrameworks”的操作。
   2:2>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(GetTargetFrameworks 个目标)的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“BeforeClean”依赖于它):
     4>由于 false 条件，已跳过任务“Error”；( '$(_InvalidConfigurationError)' == 'true' )计算为( '' == 'true' )。
       由于 false 条件，已跳过任务“Warning”；( '$(_InvalidConfigurationWarning)' == 'true' )计算为( '' == 'true' )。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         Configuration=Debug
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=AnyCPU
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Error”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('bin/Debug/' != '' and !HasTrailingSlash('bin/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('obj/Debug/' != '' and !HasTrailingSlash('obj/Debug/'))。
       由于 false 条件，已跳过任务“Error”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj/' != '' and !HasTrailingSlash('obj/'))。
       由于 false 条件，已跳过任务“Error”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/' != '' And '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/' )。
       由于 false 条件，已跳过任务“Warning”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( '' == 'true' And 'obj/' != 'obj/' And 'obj/' != '/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/' )。
     4>已完成在项目“Common.csproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeClean”(目标“Clean”依赖于它):
     4>已完成在项目“Common.csproj”中生成目标“BeforeClean”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/Common.csproj.UnmanagedRegistration.cache'))。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreClean”(目标“Clean”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Delete”任务。
       任务“Delete”
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ReadLinesFromFile”任务。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindUnderPath”任务。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/UnityEngine.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.csproj.CoreCompileInputs.cache”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.csproj.CopyComplete”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.dll”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.pdb”。
         正在删除文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.csproj.AssemblyReference.cache”。
       已完成执行任务“Delete”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“RemoveDuplicates”任务。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MakeDir”任务。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“WriteLinesToFile”任务。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
     4>已完成在项目“Common.csproj”中生成目标“CoreClean”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignProjectConfiguration”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignProjectConfiguration”任务。
       任务“AssignProjectConfiguration”
       已完成执行任务“AssignProjectConfiguration”的操作。
     4>已完成在项目“Common.csproj”中生成目标“AssignProjectConfiguration”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为(''=='true' and ''!='')。
     4>已完成在项目“Common.csproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
     4>已完成在项目“Common.csproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
       已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities->Count())' != '0' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' == 'true')计算为('0' != '0' and '.NETFramework,Version=v4.6' != ''
                                                               And 'true' == 'true')。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities->Count())' != '0' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true')计算为('0' != '0' and '.NETFramework,Version=v4.6' != ''
                                                               And 'true' != 'true')。
     4>已完成在项目“Common.csproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“CleanReferencedProjects”依赖于它):
     4>已完成在项目“Common.csproj”中生成目标“PrepareProjectReferences”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanReferencedProjects”(目标“Clean”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' != 'true' and 'true' == 'true' and '' != '')。
     4>已完成在项目“Common.csproj”中生成目标“CleanReferencedProjects”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanPublishFolder”(目标“Clean”依赖于它):
       由于 false 条件，已跳过任务“RemoveDir”；('$(PublishDir)'=='$(OutputPath)app.publish\' and Exists('$(PublishDir)'))计算为('bin/Debug/app.publish/'=='bin/Debug/app.publish\' and Exists('bin/Debug/app.publish/'))。
     4>已完成在项目“Common.csproj”中生成目标“CleanPublishFolder”的操作。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterClean”(目标“Clean”依赖于它):
     4>已完成在项目“Common.csproj”中生成目标“AfterClean”的操作。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
     4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Clean”(入口点):
     4>已完成在项目“Common.csproj”中生成目标“Clean”的操作。
     4>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(Clean 个目标)的操作。
     3>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:2) (GetTargetFrameworks 个目标)。
   4:2>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   4:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”(目标“GetTargetFrameworks”依赖于它):
   4:2>已完成在项目“Common.csproj”中生成目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”的操作。
   4:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworks”(入口点):
       由于 false 条件，已跳过任务“Error”；('$(IsCrossTargetingBuild)' == 'true')计算为('' == 'true')。
   4:2>已完成在项目“Common.csproj”中生成目标“GetTargetFrameworks”的操作。
   4:2>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetTargetFrameworks 个目标)的操作。
     2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:3) (GetTargetFrameworks 个目标)。
   4:3>正在使用工具版本“Current”进行生成。
       已跳过目标“GetTargetFrameworks”。以前的生成已成功。
   4:3>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetTargetFrameworks 个目标)的操作。
     3>已完成执行任务“MSBuild”的操作。
     2>已完成执行任务“MSBuild”的操作。
     3>_GetProjectReferenceTargetFrameworkProperties:
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.Build.Tasks.dll”中的“GetReferenceNearestTargetFrameworkTask”任务。
       任务“GetReferenceNearestTargetFrameworkTask”
     2>_GetProjectReferenceTargetFrameworkProperties:
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.Build.Tasks.dll”中的“GetReferenceNearestTargetFrameworkTask”任务。
       任务“GetReferenceNearestTargetFrameworkTask”
         (in) CurrentProjectTargetFramework '.NETFramework,Version=v4.6'
         (in) CurrentProjectTargetPlatform 'Windows,Version=7.0'
         (in) FallbackTargetFrameworks ''
         (in) AnnotatedProjectReferences '../Common/Common.csproj'
     3>_GetProjectReferenceTargetFrameworkProperties:
         (in) CurrentProjectTargetFramework '.NETFramework,Version=v4.6'
         (in) CurrentProjectTargetPlatform 'Windows,Version=7.0'
         (in) FallbackTargetFrameworks ''
         (in) AnnotatedProjectReferences '../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj'
         (out) AssignedProjects '../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj'
       已完成执行任务“GetReferenceNearestTargetFrameworkTask”的操作。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities->Count())' != '0' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true')计算为('2' != '0' and '.NETFramework,Version=v4.6' != ''
                                                               And 'true' != 'true')。
     2>_GetProjectReferenceTargetFrameworkProperties:
         (out) AssignedProjects '../Common/Common.csproj'
       已完成执行任务“GetReferenceNearestTargetFrameworkTask”的操作。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities->Count())' != '0' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true')计算为('1' != '0' and '.NETFramework,Version=v4.6' != ''
                                                               And 'true' != 'true')。
     2>已完成在项目“StoryScript.csproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
     3>已完成在项目“GameKernel.csproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“CleanReferencedProjects”依赖于它):
     2>已完成在项目“StoryScript.csproj”中生成目标“PrepareProjectReferences”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanReferencedProjects”(目标“Clean”依赖于它):
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“CleanReferencedProjects”依赖于它):
     3>已完成在项目“GameKernel.csproj”中生成目标“PrepareProjectReferences”的操作。
     2>CleanReferencedProjects:
         移除项目“../Common/Common.csproj”的属性:
           TargetFramework
     2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:4) (Clean 个目标)。
   4:4>正在使用工具版本“Current”进行生成。
       已跳过目标“Clean”。以前的生成已成功。
   4:4>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(Clean 个目标)的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanReferencedProjects”(目标“Clean”依赖于它):
     3>任务“MSBuild”
         全局属性:
           Configuration=Debug
     2>已完成执行任务“MSBuild”的操作。
     2>已完成在项目“StoryScript.csproj”中生成目标“CleanReferencedProjects”的操作。
     3>CleanReferencedProjects:
           Platform=AnyCPU
         移除项目“../../Infrastructure/Common/Common.csproj”的属性:
           TargetFramework
         移除项目“../../Infrastructure/StoryScript/StoryScript.csproj”的属性:
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanPublishFolder”(目标“Clean”依赖于它):
     2>由于 false 条件，已跳过任务“RemoveDir”；('$(PublishDir)'=='$(OutputPath)app.publish\' and Exists('$(PublishDir)'))计算为('bin/Debug/app.publish/'=='bin/Debug/app.publish\' and Exists('bin/Debug/app.publish/'))。
     3>CleanReferencedProjects:
           TargetFramework
     2>已完成在项目“StoryScript.csproj”中生成目标“CleanPublishFolder”的操作。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterClean”(目标“Clean”依赖于它):
     2>已完成在项目“StoryScript.csproj”中生成目标“AfterClean”的操作。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
     2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Clean”(入口点):
     2>已完成在项目“StoryScript.csproj”中生成目标“Clean”的操作。
     2>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(Clean 个目标)的操作。
     3>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:5) (Clean 个目标)。
   4:5>正在使用工具版本“Current”进行生成。
       已跳过目标“Clean”。以前的生成已成功。
   4:5>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(Clean 个目标)的操作。
     3>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:3) (Clean 个目标)。
   2:3>正在使用工具版本“Current”进行生成。
       已跳过目标“Clean”。以前的生成已成功。
   2:3>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(Clean 个目标)的操作。
     3>已完成执行任务“MSBuild”的操作。
     3>已完成在项目“GameKernel.csproj”中生成目标“CleanReferencedProjects”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CleanPublishFolder”(目标“Clean”依赖于它):
       由于 false 条件，已跳过任务“RemoveDir”；('$(PublishDir)'=='$(OutputPath)app.publish\' and Exists('$(PublishDir)'))计算为('bin/Debug/app.publish/'=='bin/Debug/app.publish\' and Exists('bin/Debug/app.publish/'))。
     3>已完成在项目“GameKernel.csproj”中生成目标“CleanPublishFolder”的操作。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterClean”(目标“Clean”依赖于它):
     3>已完成在项目“GameKernel.csproj”中生成目标“AfterClean”的操作。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
     3>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Clean”(入口点):
     3>已完成在项目“GameKernel.csproj”中生成目标“Clean”的操作。
     3>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(Clean 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
     1>已完成在项目“GameLibrary.sln”中生成目标“Clean”的操作。
     1>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”的文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln.metaproj”中的目标“Rebuild”(入口点):
       任务“MSBuild”
         全局属性:
           BuildingSolutionFile=true
           CurrentSolutionConfigurationContents=<SolutionConfiguration>
           <ProjectConfiguration Project="{1C8280CD-EB93-4849-940E-A99EDDF811D6}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
           <ProjectConfiguration Project="{F5FC4012-CE76-4AD8-B04A-25B1A0BF7EEC}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
           <ProjectConfiguration Project="{F1D962E1-3B17-4597-B542-BCB657E75829}" AbsolutePath="/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
         </SolutionConfiguration>
           SolutionDir=/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/
           SolutionExt=.sln
           SolutionFileName=GameLibrary.sln
           SolutionName=GameLibrary
           SolutionPath=/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
         项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的其他属性:
           Configuration=Debug
           Platform=AnyCPU
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:4) (Rebuild 个目标)。
   2:4>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeRebuild”(目标“Rebuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BeforeRebuild”的操作。
       已跳过目标“Clean”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeBuild”(目标“Build”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BeforeBuild”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BuildOnlySettings”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BuildOnlySettings”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”(目标“PrepareForBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GetFrameworkPaths”的操作。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 2 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2) (Rebuild 个目标)。
   3:2>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”(目标“PrepareForBuild”依赖于它):
   2:4>正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetReferenceAssemblyPaths”任务。
       任务“GetReferenceAssemblyPaths”
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeRebuild”(目标“Rebuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BeforeRebuild”的操作。
       已跳过目标“Clean”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeBuild”(目标“Build”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BeforeBuild”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BuildOnlySettings”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BuildOnlySettings”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”(目标“PrepareForBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GetFrameworkPaths”的操作。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”(目标“PrepareForBuild”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetReferenceAssemblyPaths”任务。
       任务“GetReferenceAssemblyPaths”
   2:4>已完成执行任务“GetReferenceAssemblyPaths”的操作。
   3:2>已完成执行任务“GetReferenceAssemblyPaths”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GetReferenceAssemblyPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”(目标“CoreBuild”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindAppConfigFile”任务。
       任务“FindAppConfigFile”
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GetReferenceAssemblyPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”(目标“CoreBuild”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindAppConfigFile”任务。
   2:4>已完成执行任务“FindAppConfigFile”的操作。
       任务“MakeDir”
   3:2>任务“FindAppConfigFile”
       已完成执行任务“FindAppConfigFile”的操作。
       任务“MakeDir”
   2:4>已完成执行任务“MakeDir”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“PrepareForBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BeforeResolveReferences”的操作。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
       已跳过目标“PrepareProjectReferences”。以前的生成已成功。
     1>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(1)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:6) (Rebuild 个目标)。
   4:6>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
   2:4>由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('true' == 'true' and '../Common/Common.csproj' != '' and ('' == 'true' or 'true' != 'true') and '16.0' != '10.0' and '../Common/Common.csproj' != '')。
       任务“MSBuild”
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeRebuild”(目标“Rebuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BeforeRebuild”的操作。
   2:4>ResolveProjectReferences:
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除项目“../Common/Common.csproj”的属性:
           TargetFramework
   4:6>已跳过目标“Clean”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeBuild”(目标“Build”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BeforeBuild”的操作。
   3:2>已完成执行任务“MakeDir”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BuildOnlySettings”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BuildOnlySettings”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“PrepareForBuild”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“GetFrameworkPaths”(目标“PrepareForBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GetFrameworkPaths”的操作。
   3:2>由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   4:6>已跳过目标“GetFrameworkPaths”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BeforeResolveReferences”的操作。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”(目标“PrepareForBuild”依赖于它):
   4:6>正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetReferenceAssemblyPaths”任务。
       任务“GetReferenceAssemblyPaths”
   3:2>已跳过目标“PrepareProjectReferences”。以前的生成已成功。
   4:6>已完成执行任务“GetReferenceAssemblyPaths”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“GetReferenceAssemblyPaths”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
   3:2>由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('true' == 'true' and '../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj' != '' and ('' == 'true' or 'true' != 'true') and '16.0' != '10.0' and '../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj' != '')。
   4:6>由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
   3:2>任务“MSBuild”
         全局属性:
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”(目标“CoreBuild”依赖于它):
   4:6>正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindAppConfigFile”任务。
   3:2>ResolveProjectReferences:
           Configuration=Debug
   4:6>任务“FindAppConfigFile”
   3:2>ResolveProjectReferences:
           Platform=AnyCPU
   4:6>已完成执行任务“FindAppConfigFile”的操作。
   3:2>ResolveProjectReferences:
         移除项目“../../Infrastructure/Common/Common.csproj”的属性:
   4:6>任务“MakeDir”
   3:2>ResolveProjectReferences:
           TargetFramework
   4:6>已完成执行任务“MakeDir”的操作。
   3:2>ResolveProjectReferences:
         移除项目“../../Infrastructure/StoryScript/StoryScript.csproj”的属性:
   4:6>已完成在项目“Common.csproj”中生成目标“PrepareForBuild”的操作。
   3:2>ResolveProjectReferences:
           TargetFramework
   4:6>由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BeforeResolveReferences”的操作。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
       已跳过目标“PrepareProjectReferences”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and ('' == 'true' or 'true' != 'true') and '16.0' != '10.0' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and '' != 'true' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“Warning”；('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '')计算为('' != '' and '' != '')。
   4:6>已完成在项目“Common.csproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”(目标“ResolveReferences”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“ResolveNativeReferences”的操作。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
   4:6>已完成在项目“Common.csproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
   4:6>已完成在项目“Common.csproj”中生成目标“ExpandSDKReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
       由于条件的计算结果为 false，已跳过目标“FilterDeniedAssemblyReferences”；('$(FilterDeniedAssemblies)' == 'true'
                               or ('$(EnableFilteringDeniedAssembliesForNet46xProjects)' != 'false' and '$(FilterDeniedAssemblies)' == ''
                                   and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(ImplicitlyExpandNETStandardFacades)' == 'true'
                                   and '$(DependsOnNETStandard)' == 'true'  AND '$(NETStandardInbox)' != 'true' AND '$(_TargetFrameworkVersionWithoutV)' < '4.7.1'))的计算结果为('' == 'true'
                               or ('' != 'false' and '' == ''
                                   and '.NETFramework' == '.NETFramework' and '' == 'true'
                                   and '' == 'true'  AND '' != 'true' AND '4.6' < '4.7.1'))。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/Microsoft.NET.Build.Extensions.ConflictResolution.targets”中的目标“_HandlePackageFileConflicts”(目标“ResolveAssemblyReferences”依赖于它):
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/tools/net472/Microsoft.NET.Build.Extensions.Tasks.dll”中的“ResolvePackageFileConflicts”任务。
       任务“ResolvePackageFileConflicts”
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:5) (默认目标)。
   2:5>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       已跳过目标“BeforeBuild”。以前的生成已成功。
       已跳过目标“BuildOnlySettings”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   4:6>已完成执行任务“ResolvePackageFileConflicts”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_HandlePackageFileConflicts”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ResolveAssemblyReference”任务。
       任务“ResolveAssemblyReference”
         TargetFrameworkMoniker:
             .NETFramework,Version=v4.6
         TargetFrameworkMonikerDisplayName:
             .NET Framework 4.6
         TargetedRuntimeVersion:
             v4.0.30319
         Assemblies:
             System
             UnityEngine
                 HintPath =“../../ExternLibrary/UnityEngine.dll”
             System.Core
         AssemblyFiles:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll
         CandidateAssemblyFiles:
         TargetFrameworkDirectories:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         InstalledAssemblyTables:
         IgnoreInstalledAssemblyTable:
             False
         SearchPaths:
             {CandidateAssemblyFiles}
             {HintPathFromItem}
             {TargetFrameworkDirectory}
             {Registry:Software/Microsoft/.NETFramework,v4.6,AssemblyFoldersEx}
             {AssemblyFolders}
             {GAC}
             {RawFileName}
             bin/Debug/
         AllowedAssemblyExtensions:
             .winmd
             .dll
             .exe
         AllowedRelatedFileExtensions:
             .pdb
             .dll.mdb
             .exe.mdb
             .xml
             .pri
             .dll.config
             .exe.config
         AppConfigFile:
             
         AutoUnify:
             True
         CopyLocalDependenciesWhenParentReferenceInGac:
             True
         FindDependencies:
             True
         TargetProcessorArchitecture:
             msil
         StateFile:
             obj/Debug/Common.csprojAssemblyReference.cache
         InstalledAssemblySubsetTables:
         IgnoreInstalledAssemblySubsetTable:
             False
         TargetFrameworkSubsets:
         FullTargetFrameworkSubsetNames:
             Full
         ProfileName:
             
         FullFrameworkFolders:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         LatestTargetFrameworkDirectories:
         ProfileTablesLocation:
         统一主引用“mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”。
             在搜索路径位置“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”找到引用。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“3.5.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
       已完成执行任务“ResolveAssemblyReference”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_RemoveZipFileSuggestedRedirect”；('$(_TargetFrameworkVersionWithoutV)' >= '4.7.1' And '$(AllowZipFileRedirect)' != 'true')的计算结果为('4.6' >= '4.7.1' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)'))的计算结果为('' == 'true' and '' == 'true' and Exists('obj/Debug/Common.dll.config'))。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“AfterResolveReferences”的操作。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“ImplicitlyExpandDesignTimeFacades”(目标“ResolveReferences”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“ImplicitlyExpandDesignTimeFacades”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“ResolveReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“CopyAdditionalFiles”(目标“AssignTargetPaths”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“CopyAdditionalFiles”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignTargetPath”任务。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and ''=='.manifest')。
   4:6>已完成在项目“Common.csproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignCulture”任务。
       任务“AssignCulture”
       已完成执行任务“AssignCulture”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“SplitResourcesByCulture”的操作。
       由于条件的计算结果为 false，已跳过目标“CreateManifestResourceNames”；('@(EmbeddedResource)' != '')的计算结果为('' != '')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“CreateCustomManifestResourceNames”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“PrepareResources”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“PrepareResourceNames”的操作。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       已跳过目标“SplitResourcesByCulture”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”(目标“ResGen”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BeforeResGen”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“CoreResGen”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreResGen”(目标“ResGen”依赖于它):
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' != 'CLR2')。
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' == 'CLR2')。
   4:6>已完成在项目“Common.csproj”中生成目标“CoreResGen”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResGen”(目标“ResGen”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“AfterResGen”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”(目标“PrepareResources”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“ResGen”的操作。
       由于条件的计算结果为 false，已跳过目标“CompileLicxFiles”；('@(_LicxFile)'!='')的计算结果为(''!='')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResources”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“PrepareResources”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       已跳过目标“ResolveNativeReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SetExternalWin32ManifestProperties”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='')的计算结果为(''=='true' or ''!='' or ''!='')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SetEmbeddedWin32ManifestProperties”(目标“SetWin32ManifestProperties”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetFrameworkPath”任务。
       任务“GetFrameworkPath”
       已完成执行任务“GetFrameworkPath”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_SetEmbeddedWin32ManifestProperties”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SetWin32ManifestProperties”(目标“Compile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“SetWin32ManifestProperties”的操作。
       已跳过目标“FindReferenceAssembliesForReferences”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileInputs”(目标“Compile”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   4:6>已完成在项目“Common.csproj”中生成目标“_GenerateCompileInputs”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileShouldRun”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GenerateMSBuildEditorConfigFileShouldRun”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateMSBuildEditorConfigFileCore”；('$(_GeneratedEditorConfigShouldRun)' == 'true')的计算结果为('' == 'true')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFile”(目标“BeforeCompile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GenerateMSBuildEditorConfigFile”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets”中的目标“_SetTargetFrameworkMonikerAttribute”(目标“GenerateTargetFrameworkMonikerAttribute”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_SetTargetFrameworkMonikerAttribute”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”(目标“BeforeCompile”依赖于它):
       正在跳过目标“GenerateTargetFrameworkMonikerAttribute”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.targets
       输出文件:obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs
   4:6>已完成在项目“Common.csproj”中生成目标“GenerateTargetFrameworkMonikerAttribute”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateAdditionalSources”；('@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true')的计算结果为('' != '' and '' == 'true')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeCompile”(目标“Compile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“BeforeCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampBeforeCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileDependencyCache”(目标“Compile”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Hash”任务。
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_GenerateCompileDependencyCache”的操作。
       由于条件的计算结果为 false，已跳过目标“_ComputeNonExistentFileProperty”；(('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true')))的计算结果为(('' == 'true') and ('' != 'true') and (('true' == 'false') or ('true' == 'true')))。
       由于条件的计算结果为 false，已跳过目标“ResolveCodeAnalysisRuleSet”；('$(CodeAnalysisRuleSet)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll;...' == '')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_BeforeVBCSCoreCompile”(目标“CoreCompile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_BeforeVBCSCoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll;/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll;...' == '')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_ComputeSkipAnalyzers”(目标“CoreCompile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_ComputeSkipAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPathMapFromSourceRoots”；('$(DeterministicSourcePaths)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“CreateCompilerGeneratedFilesOutputPath”；('$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'))的计算结果为('false' == 'true' and !('' == 'true' OR 'true' != 'true'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.CSharp.Core.targets”中的目标“CoreCompile”(目标“Compile”依赖于它):
       正在完全生成目标“CoreCompile”。
       输出文件“obj/Debug/Common.dll”不存在。
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Csc”任务。
       任务“Csc”
         /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/csc.exe /noconfig /nowarn:1701,1702 /fullpaths /nostdlib+ /platform:AnyCPU /errorreport:prompt /warn:4 /define:TRACE;DEBUG;ENABLE_ERROR_LOG;ENABLE_LOG /highentropyva+ /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll /debug+ /debug:full /filealign:512 /optimize- /out:obj/Debug/Common.dll /subsystemversion:6.00 /target:library /utf8output /langversion:7.3 ClientConcurrent/ClientConcurrentActionProcessor.cs ClientConcurrent/ClientConcurrentCommandProcessor.cs ClientConcurrent/ClientConcurrentDictionary.cs ClientConcurrent/ClientConcurrentObjectPool.cs ClientConcurrent/ClientConcurrentOrderedList.cs ClientConcurrent/ClientConcurrentPoolAllocatedAction.cs ClientConcurrent/ClientConcurrentQueue.cs ClientConcurrent/ClientConcurrentStack.cs ClientConcurrent/ClientConcurrentTypedDataCollection.cs ClientConcurrent/ClientInterlocked.cs ClientConcurrent/ClientSpinLock.cs ClientConcurrent/ClientSpinWait.cs ClientConcurrent/ClientWatch.cs ClientConcurrent/MyThread.cs Geometry/Geometry.cs Geometry/Geometry3D.cs GlobalVariables.cs Log/LogSystem.cs Properties/AssemblyInfo.cs PublishSubscribe/PublishSubscribeSystem.cs Util/Converter.cs Util/Heap.cs Util/Helper.cs HomePath.cs Util/IActionQueue.cs Util/LinkedListDictionary.cs Util/MyActionAndFunc.cs Util/ObjectPool.cs Util/GenericUtility.cs Util/PoolAllocatedAction.cs Util/RandomTable.cs Util/SimpleObjectPool.cs Util/StringLower.cs Util/TimeUtility.cs Util/TypedDataCollection.cs "obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs"
         Using shared compilation with compiler from directory: /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn
         Microsoft (R) Visual C# Compiler version 3.9.0-6.21124.20 (db94f4cc)
         Copyright (C) Microsoft Corporation. All rights reserved.
       已完成执行任务“Csc”的操作。
       由于 false 条件，已跳过任务“CallTarget”；('$(TargetsTriggeredByCompilation)' != '')计算为('' != '')。
   4:6>已完成在项目“Common.csproj”中生成目标“CoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampAfterCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterCompile”(目标“Compile”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“AfterCompile”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Compile”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“Compile”的操作。
       由于条件的计算结果为 false，已跳过目标“ExportWindowsMDFile”；('$(ExportWinMDFile)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/Common.csproj.UnmanagedRegistration.cache'))。
       由于条件的计算结果为 false，已跳过目标“GenerateSerializationAssemblies”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateSatelliteAssemblyInputs”(目标“CreateSatelliteAssemblies”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   4:6>已完成在项目“Common.csproj”中生成目标“_GenerateSatelliteAssemblyInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“GenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != '' and '$(GenerateSatelliteAssembliesForCore)' != 'true')的计算结果为('' != '' and '' != 'true')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateSatelliteAssemblies”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“CreateSatelliteAssemblies”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GenerateManifests”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”(目标“GetTargetPath”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GetTargetPathWithTargetPlatformMoniker”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPath”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“GetTargetPath”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopyFilesMarkedCopyLocal”(目标“CopyFilesToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Copy”任务。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/UnityEngine.dll”。
       已完成执行任务“Copy”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Touch”任务。
       任务“Touch”
         正在创建“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.csproj.CopyComplete”，因为已指定“AlwaysCreate”。
       已完成执行任务“Touch”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_CopyFilesMarkedCopyLocal”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_SplitProjectReferencesByFileExistence”。以前的生成已成功。
       已跳过目标“_GetProjectReferenceTargetFrameworkProperties”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”(目标“GetCopyToOutputDirectoryItems”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToOutputDirectoryItems”(目标“_CopySourceItemsToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CallTarget”任务。
       任务“CallTarget”
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       已跳过目标“_AddOutputPathToGlobalPropertiesToRemove”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('@(_MSBuildProjectReferenceExistent)' != '' and '$(_GetChildProjectCopyToOutputDirectoryItems)' == 'true' and '%(_MSBuildProjectReferenceExistent.Private)' != 'false' and '$(UseCommonOutputDirectory)' != 'true')计算为('' != '' and 'true' == 'true' and '' != 'false' and 'false' != 'true')。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”的操作。
       已完成执行任务“CallTarget”的操作。
       任务“CallTarget”
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromThisProject”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromThisProject”的操作。
       已完成执行任务“CallTarget”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“GetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectory)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectoryAlways”；( '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' )的计算结果为( '' != '' )。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopySourceItemsToOutputDirectory”(目标“CopyFilesToOutputDirectory”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_CopySourceItemsToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyAppConfigFile”；( '@(AppConfigWithTargetPath)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyManifestFiles”；( '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' )的计算结果为( ''=='true' or ''=='true' )。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“CopyFilesToOutputDirectory”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CopyFilesToOutputDirectory”(目标“PrepareForRun”依赖于它):
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“CopyRefAssembly”；('$(ProduceReferenceAssembly)' == 'true' and '$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true')计算为('false' == 'true' and 'true' == 'true' and '' != 'true')。
       任务“Message”
         Common -> /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Copy”；('@(AddModules)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('$(_SGenDllCreated)'=='true')计算为('false'=='true')。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“Copy”；('$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true')计算为('false'=='true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('@(IntermediateSatelliteAssembliesWithTargetPath)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' )计算为('' != '' or '' != '' or '' != '' or '' != '' )。
       由于 false 条件，已跳过任务“Copy”；('$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != '')计算为('' != 'true' and '' != '')。
       由于 false 条件，已跳过任务“Message”；('$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != '')计算为('' != 'true' and '' != '')。
   4:6>已完成在项目“Common.csproj”中生成目标“CopyFilesToOutputDirectory”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForRun”(目标“CoreBuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“PrepareForRun”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedRegistration”；('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')的计算结果为(''=='true' and 'Library'=='library')。
       已跳过目标“_CheckForCompileOutputs”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“IncrementalClean”依赖于它):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ConvertToAbsolutePath”任务。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       任务“FindUnderPath”
         比较路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“IncrementalClean”(目标“CoreBuild”依赖于它):
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/obj/Debug/Common.csproj.AssemblyReference.cache”不存在。正在跳过。
       已完成执行任务“Delete”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   4:6>已完成在项目“Common.csproj”中生成目标“IncrementalClean”的操作。
       由于条件的计算结果为 false，已跳过目标“PostBuildEvent”；('$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)'))的计算结果为('' != '' and ('' != 'OnOutputUpdated' or '' != ''))。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreBuild”(目标“Build”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“CoreBuild”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterBuild”(目标“Build”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“AfterBuild”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Build”(目标“Rebuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“Build”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterRebuild”(目标“Rebuild”依赖于它):
   4:6>已完成在项目“Common.csproj”中生成目标“AfterRebuild”的操作。
   4:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Rebuild”(入口点):
   4:6>已完成在项目“Common.csproj”中生成目标“Rebuild”的操作。
   4:6>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(Rebuild 个目标)的操作。
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:7) (默认目标)。
   4:7>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       已跳过目标“Build”。以前的生成已成功。
   4:7>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(默认目标)的操作。
   2:4>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:4)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:8) (默认目标)。
   4:8>正在使用工具版本“Current”进行生成。
       已跳过目标“Build”。以前的生成已成功。
   4:8>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(默认目标)的操作。
   2:4>已完成执行任务“MSBuild”的操作。
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除项目“../Common/Common.csproj”的属性:
           TargetFramework
   2:4>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:4)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:9) (GetNativeManifest 个目标)。
   4:9>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   4:9>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetNativeManifest”(入口点):
   4:9>已完成在项目“Common.csproj”中生成目标“GetNativeManifest”的操作。
   4:9>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetNativeManifest 个目标)的操作。
   2:4>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“Warning”；('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '')计算为('../Common/Common.csproj' != '' and '' != '')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”(目标“ResolveReferences”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveNativeReferences”的操作。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ExpandSDKReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
       由于条件的计算结果为 false，已跳过目标“FilterDeniedAssemblyReferences”；('$(FilterDeniedAssemblies)' == 'true'
                               or ('$(EnableFilteringDeniedAssembliesForNet46xProjects)' != 'false' and '$(FilterDeniedAssemblies)' == ''
                                   and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(ImplicitlyExpandNETStandardFacades)' == 'true'
                                   and '$(DependsOnNETStandard)' == 'true'  AND '$(NETStandardInbox)' != 'true' AND '$(_TargetFrameworkVersionWithoutV)' < '4.7.1'))的计算结果为('' == 'true'
                               or ('' != 'false' and '' == ''
                                   and '.NETFramework' == '.NETFramework' and '' == 'true'
                                   and '' == 'true'  AND '' != 'true' AND '4.6' < '4.7.1'))。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/Microsoft.NET.Build.Extensions.ConflictResolution.targets”中的目标“_HandlePackageFileConflicts”(目标“ResolveAssemblyReferences”依赖于它):
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/tools/net472/Microsoft.NET.Build.Extensions.Tasks.dll”中的“ResolvePackageFileConflicts”任务。
       任务“ResolvePackageFileConflicts”
       已完成执行任务“ResolvePackageFileConflicts”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_HandlePackageFileConflicts”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ResolveAssemblyReference”任务。
       任务“ResolveAssemblyReference”
         TargetFrameworkMoniker:
             .NETFramework,Version=v4.6
         TargetFrameworkMonikerDisplayName:
             .NET Framework 4.6
         TargetedRuntimeVersion:
             v4.0.30319
         Assemblies:
             Dsl
                 HintPath =“../../ExternLibrary/Dsl.dll”
             LitJson
                 HintPath =“../../ExternLibrary/LitJson.dll”
             System
             UnityEngine
                 HintPath =“../../ExternLibrary/UnityEngine.dll”
             System.Core
         AssemblyFiles:
             /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll
         CandidateAssemblyFiles:
         TargetFrameworkDirectories:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         InstalledAssemblyTables:
         IgnoreInstalledAssemblyTable:
             False
         SearchPaths:
             {CandidateAssemblyFiles}
             {HintPathFromItem}
             {TargetFrameworkDirectory}
             {Registry:Software/Microsoft/.NETFramework,v4.6,AssemblyFoldersEx}
             {AssemblyFolders}
             {GAC}
             {RawFileName}
             bin/Debug/
         AllowedAssemblyExtensions:
             .winmd
             .dll
             .exe
         AllowedRelatedFileExtensions:
             .pdb
             .dll.mdb
             .exe.mdb
             .xml
             .pri
             .dll.config
             .exe.config
         AppConfigFile:
             
         AutoUnify:
             True
         CopyLocalDependenciesWhenParentReferenceInGac:
             True
         FindDependencies:
             True
         TargetProcessorArchitecture:
             msil
         StateFile:
             obj/Debug/StoryScript.csprojAssemblyReference.cache
         InstalledAssemblySubsetTables:
         IgnoreInstalledAssemblySubsetTable:
             False
         TargetFrameworkSubsets:
         FullTargetFrameworkSubsetNames:
             Full
         ProfileName:
             
         FullFrameworkFolders:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         LatestTargetFrameworkDirectories:
         ProfileTablesLocation:
         主引用“Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”。
             在搜索路径位置“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”找到引用。
             找到相关文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”。
             在搜索路径位置“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”找到引用。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“Dsl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             找到相关文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.pdb”。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“LitJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“3.5.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
       已完成执行任务“ResolveAssemblyReference”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_RemoveZipFileSuggestedRedirect”；('$(_TargetFrameworkVersionWithoutV)' >= '4.7.1' And '$(AllowZipFileRedirect)' != 'true')的计算结果为('4.6' >= '4.7.1' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)'))的计算结果为('' == 'true' and '' == 'true' and Exists('obj/Debug/StoryScript.dll.config'))。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AfterResolveReferences”的操作。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“ImplicitlyExpandDesignTimeFacades”(目标“ResolveReferences”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ImplicitlyExpandDesignTimeFacades”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“CopyAdditionalFiles”(目标“AssignTargetPaths”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CopyAdditionalFiles”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignTargetPath”任务。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and ''=='.manifest')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignCulture”任务。
       任务“AssignCulture”
       已完成执行任务“AssignCulture”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“SplitResourcesByCulture”的操作。
       由于条件的计算结果为 false，已跳过目标“CreateManifestResourceNames”；('@(EmbeddedResource)' != '')的计算结果为('' != '')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CreateCustomManifestResourceNames”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“PrepareResources”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“PrepareResourceNames”的操作。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       已跳过目标“SplitResourcesByCulture”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”(目标“ResGen”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BeforeResGen”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“CoreResGen”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreResGen”(目标“ResGen”依赖于它):
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' != 'CLR2')。
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' == 'CLR2')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CoreResGen”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResGen”(目标“ResGen”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AfterResGen”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”(目标“PrepareResources”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResGen”的操作。
       由于条件的计算结果为 false，已跳过目标“CompileLicxFiles”；('@(_LicxFile)'!='')的计算结果为(''!='')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResources”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“PrepareResources”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       已跳过目标“ResolveNativeReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SetExternalWin32ManifestProperties”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='')的计算结果为(''=='true' or ''!='' or ''!='')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SetEmbeddedWin32ManifestProperties”(目标“SetWin32ManifestProperties”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetFrameworkPath”任务。
       任务“GetFrameworkPath”
       已完成执行任务“GetFrameworkPath”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_SetEmbeddedWin32ManifestProperties”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SetWin32ManifestProperties”(目标“Compile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“SetWin32ManifestProperties”的操作。
       已跳过目标“FindReferenceAssembliesForReferences”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileInputs”(目标“Compile”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_GenerateCompileInputs”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileShouldRun”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GenerateMSBuildEditorConfigFileShouldRun”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateMSBuildEditorConfigFileCore”；('$(_GeneratedEditorConfigShouldRun)' == 'true')的计算结果为('' == 'true')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFile”(目标“BeforeCompile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GenerateMSBuildEditorConfigFile”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets”中的目标“_SetTargetFrameworkMonikerAttribute”(目标“GenerateTargetFrameworkMonikerAttribute”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_SetTargetFrameworkMonikerAttribute”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”(目标“BeforeCompile”依赖于它):
       正在跳过目标“GenerateTargetFrameworkMonikerAttribute”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.targets
       输出文件:obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GenerateTargetFrameworkMonikerAttribute”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateAdditionalSources”；('@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true')的计算结果为('' != '' and '' == 'true')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeCompile”(目标“Compile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“BeforeCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampBeforeCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileDependencyCache”(目标“Compile”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Hash”任务。
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_GenerateCompileDependencyCache”的操作。
       由于条件的计算结果为 false，已跳过目标“_ComputeNonExistentFileProperty”；(('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true')))的计算结果为(('' == 'true') and ('' != 'true') and (('true' == 'false') or ('true' == 'true')))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets”中的目标“ResolveCodeAnalysisRuleSet”(目标“CoreCompile”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ResolveCodeAnalysisRuleSet”任务。
       任务“ResolveCodeAnalysisRuleSet”
   2:4>/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets(142,9): warning MSB3884: 无法找到规则集文件“MinimumRecommendedRules.ruleset”。 [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj]
       已完成执行任务“ResolveCodeAnalysisRuleSet”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“ResolveCodeAnalysisRuleSet”的操作。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll;...' == '')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_BeforeVBCSCoreCompile”(目标“CoreCompile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_BeforeVBCSCoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll;...' == '')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_ComputeSkipAnalyzers”(目标“CoreCompile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_ComputeSkipAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPathMapFromSourceRoots”；('$(DeterministicSourcePaths)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“CreateCompilerGeneratedFilesOutputPath”；('$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'))的计算结果为('false' == 'true' and !('' == 'true' OR 'true' != 'true'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.CSharp.Core.targets”中的目标“CoreCompile”(目标“Compile”依赖于它):
       正在完全生成目标“CoreCompile”。
       输出文件“obj/Debug/StoryScript.dll”不存在。
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Csc”任务。
       任务“Csc”
         /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/csc.exe /noconfig /nowarn:1701,1702 /fullpaths /nostdlib+ /platform:AnyCPU /errorreport:prompt /define:TRACE;DEBUG;ENABLE_ERROR_LOG;ENABLE_LOG /highentropyva+ /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll /debug+ /debug:full /filealign:512 /out:obj/Debug/StoryScript.dll /subsystemversion:6.00 /target:library /utf8output /langversion:7.3 CommonValues/Linq.cs CustomCommandValueParser.cs CommonCommands/Assign.cs CommonCommands/Composite.cs CommonCommands/Foreach.cs CommonCommands/IfElse.cs CommonCommands/Hashtable.cs CommonCommands/LocalMessage.cs CommonCommands/Log.cs CommonCommands/ReflectionCommand.cs CommonCommands/Terminate.cs CommonCommands/Wait.cs CommonCommands/While.cs CommonValues/Arithmetic.cs CommonValues/Compare.cs CommonValues/Composite.cs CommonValues/GeneralValues.cs CommonValues/Hashtable.cs CommonValues/Logic.cs CommonValues/ReflectionValue.cs CommonValues/String.cs CommonValues/Time.cs IStoryCommand.cs IStoryCommandFactory.cs IStoryValue.cs Properties/AssemblyInfo.cs StoryCommandHelper.cs StoryCommandManager.cs StoryConfigManager.cs StoryDefine.cs StoryInstance.cs StoryValueHelper.cs StoryValueManager.cs "obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs"
         Using shared compilation with compiler from directory: /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn
         Microsoft (R) Visual C# Compiler version 3.9.0-6.21124.20 (db94f4cc)
         Copyright (C) Microsoft Corporation. All rights reserved.
       已完成执行任务“Csc”的操作。
       由于 false 条件，已跳过任务“CallTarget”；('$(TargetsTriggeredByCompilation)' != '')计算为('' != '')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampAfterCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterCompile”(目标“Compile”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AfterCompile”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Compile”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“Compile”的操作。
       由于条件的计算结果为 false，已跳过目标“ExportWindowsMDFile”；('$(ExportWinMDFile)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/StoryScript.csproj.UnmanagedRegistration.cache'))。
       由于条件的计算结果为 false，已跳过目标“GenerateSerializationAssemblies”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateSatelliteAssemblyInputs”(目标“CreateSatelliteAssemblies”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_GenerateSatelliteAssemblyInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“GenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != '' and '$(GenerateSatelliteAssembliesForCore)' != 'true')的计算结果为('' != '' and '' != 'true')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateSatelliteAssemblies”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CreateSatelliteAssemblies”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GenerateManifests”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”(目标“GetTargetPath”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GetTargetPathWithTargetPlatformMoniker”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPath”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GetTargetPath”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopyFilesMarkedCopyLocal”(目标“CopyFilesToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Copy”任务。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Common.pdb”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/UnityEngine.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/LitJson.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Dsl.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Dsl.pdb”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/Common.dll”。
       已完成执行任务“Copy”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Touch”任务。
       任务“Touch”
         正在创建“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.csproj.CopyComplete”，因为已指定“AlwaysCreate”。
       已完成执行任务“Touch”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_CopyFilesMarkedCopyLocal”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_SplitProjectReferencesByFileExistence”。以前的生成已成功。
       已跳过目标“_GetProjectReferenceTargetFrameworkProperties”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”(目标“GetCopyToOutputDirectoryItems”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToOutputDirectoryItems”(目标“_CopySourceItemsToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CallTarget”任务。
       任务“CallTarget”
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       已跳过目标“_AddOutputPathToGlobalPropertiesToRemove”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除项目“../Common/Common.csproj”的属性:
           TargetFramework
   2:4>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:4)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:10) (GetCopyToOutputDirectoryItems 个目标)。
  4:10>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       已跳过目标“GetCopyToOutputDirectoryItems”。以前的生成已成功。
  4:10>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetCopyToOutputDirectoryItems 个目标)的操作。
   2:4>已完成执行任务“MSBuild”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”的操作。
       已完成执行任务“CallTarget”的操作。
       任务“CallTarget”
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromThisProject”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromThisProject”的操作。
       已完成执行任务“CallTarget”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“GetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectory)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectoryAlways”；( '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' )的计算结果为( '' != '' )。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopySourceItemsToOutputDirectory”(目标“CopyFilesToOutputDirectory”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_CopySourceItemsToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyAppConfigFile”；( '@(AppConfigWithTargetPath)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyManifestFiles”；( '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' )的计算结果为( ''=='true' or ''=='true' )。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“CopyFilesToOutputDirectory”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CopyFilesToOutputDirectory”(目标“PrepareForRun”依赖于它):
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“CopyRefAssembly”；('$(ProduceReferenceAssembly)' == 'true' and '$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true')计算为('false' == 'true' and 'true' == 'true' and '' != 'true')。
       任务“Message”
         StoryScript -> /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Copy”；('@(AddModules)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('$(_SGenDllCreated)'=='true')计算为('false'=='true')。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.pdb”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“Copy”；('$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true')计算为('false'=='true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('@(IntermediateSatelliteAssembliesWithTargetPath)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' )计算为('' != '' or '' != '' or '' != '' or '' != '' )。
       由于 false 条件，已跳过任务“Copy”；('$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != '')计算为('' != 'true' and '' != '')。
       由于 false 条件，已跳过任务“Message”；('$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != '')计算为('' != 'true' and '' != '')。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CopyFilesToOutputDirectory”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForRun”(目标“CoreBuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“PrepareForRun”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedRegistration”；('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')的计算结果为(''=='true' and 'Library'=='library')。
       已跳过目标“_CheckForCompileOutputs”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“IncrementalClean”依赖于它):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ConvertToAbsolutePath”任务。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       任务“FindUnderPath”
         比较路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“IncrementalClean”(目标“CoreBuild”依赖于它):
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/obj/Debug/StoryScript.csproj.AssemblyReference.cache”不存在。正在跳过。
       已完成执行任务“Delete”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   2:4>已完成在项目“StoryScript.csproj”中生成目标“IncrementalClean”的操作。
       由于条件的计算结果为 false，已跳过目标“PostBuildEvent”；('$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)'))的计算结果为('' != '' and ('' != 'OnOutputUpdated' or '' != ''))。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreBuild”(目标“Build”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“CoreBuild”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterBuild”(目标“Build”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AfterBuild”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Build”(目标“Rebuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“Build”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterRebuild”(目标“Rebuild”依赖于它):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“AfterRebuild”的操作。
   2:4>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Rebuild”(入口点):
   2:4>已完成在项目“StoryScript.csproj”中生成目标“Rebuild”的操作。
   2:4>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(Rebuild 个目标)的操作。
   2:5>已跳过目标“BeforeResolveReferences”。以前的生成已成功。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“ResolveNativeReferences”。以前的生成已成功。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_RemoveZipFileSuggestedRedirect”；('$(_TargetFrameworkVersionWithoutV)' >= '4.7.1' And '$(AllowZipFileRedirect)' != 'true')的计算结果为('4.6' >= '4.7.1' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)'))的计算结果为('' == 'true' and '' == 'true' and Exists('obj/Debug/StoryScript.dll.config'))。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       已跳过目标“AfterResolveReferences”。以前的生成已成功。
       已跳过目标“ImplicitlyExpandDesignTimeFacades”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       已跳过目标“PrepareResources”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       已跳过目标“Compile”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ExportWindowsMDFile”；('$(ExportWinMDFile)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/StoryScript.csproj.UnmanagedRegistration.cache'))。
       由于条件的计算结果为 false，已跳过目标“GenerateSerializationAssemblies”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
       已跳过目标“CreateSatelliteAssemblies”。以前的生成已成功。
       已跳过目标“GenerateManifests”。以前的生成已成功。
       已跳过目标“GetTargetPath”。以前的生成已成功。
       已跳过目标“PrepareForRun”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“UnmanagedRegistration”；('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')的计算结果为(''=='true' and 'Library'=='library')。
       已跳过目标“IncrementalClean”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“PostBuildEvent”；('$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)'))的计算结果为('' != '' and ('' != 'OnOutputUpdated' or '' != ''))。
       已跳过目标“CoreBuild”。以前的生成已成功。
       已跳过目标“AfterBuild”。以前的生成已成功。
       已跳过目标“Build”。以前的生成已成功。
   2:5>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(默认目标)的操作。
   3:2>已完成执行任务“MSBuild”的操作。
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除项目“../../Infrastructure/Common/Common.csproj”的属性:
           TargetFramework
         移除项目“../../Infrastructure/StoryScript/StoryScript.csproj”的属性:
           TargetFramework
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:11) (GetNativeManifest 个目标)。
  4:11>正在使用工具版本“Current”进行生成。
       已跳过目标“GetNativeManifest”。以前的生成已成功。
  4:11>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetNativeManifest 个目标)的操作。
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:6) (GetNativeManifest 个目标)。
   2:6>正在使用工具版本“Current”进行生成。
       项目文件包含 ToolsVersion="12.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   2:6>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetNativeManifest”(入口点):
   2:6>已完成在项目“StoryScript.csproj”中生成目标“GetNativeManifest”的操作。
   2:6>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(GetNativeManifest 个目标)的操作。
   3:2>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“Warning”；('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '')计算为('../../Infrastructure/Common/Common.csproj;../../Infrastructure/StoryScript/StoryScript.csproj' != '' and '' != '')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“ResolveNativeReferences”(目标“ResolveReferences”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResolveNativeReferences”的操作。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ExpandSDKReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
       由于条件的计算结果为 false，已跳过目标“FilterDeniedAssemblyReferences”；('$(FilterDeniedAssemblies)' == 'true'
                               or ('$(EnableFilteringDeniedAssembliesForNet46xProjects)' != 'false' and '$(FilterDeniedAssemblies)' == ''
                                   and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(ImplicitlyExpandNETStandardFacades)' == 'true'
                                   and '$(DependsOnNETStandard)' == 'true'  AND '$(NETStandardInbox)' != 'true' AND '$(_TargetFrameworkVersionWithoutV)' < '4.7.1'))的计算结果为('' == 'true'
                               or ('' != 'false' and '' == ''
                                   and '.NETFramework' == '.NETFramework' and '' == 'true'
                                   and '' == 'true'  AND '' != 'true' AND '4.6' < '4.7.1'))。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ImplicitlyExpandNETStandardFacades”；('$(ImplicitlyExpandNETStandardFacades)' == 'true')的计算结果为('' == 'true')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/Microsoft.NET.Build.Extensions.ConflictResolution.targets”中的目标“_HandlePackageFileConflicts”(目标“ResolveAssemblyReferences”依赖于它):
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild/Microsoft/Microsoft.NET.Build.Extensions/tools/net472/Microsoft.NET.Build.Extensions.Tasks.dll”中的“ResolvePackageFileConflicts”任务。
       任务“ResolvePackageFileConflicts”
       已完成执行任务“ResolvePackageFileConflicts”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_HandlePackageFileConflicts”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ResolveAssemblyReference”任务。
       任务“ResolveAssemblyReference”
         TargetFrameworkMoniker:
             .NETFramework,Version=v4.6
         TargetFrameworkMonikerDisplayName:
             .NET Framework 4.6
         TargetedRuntimeVersion:
             v4.0.30319
         Assemblies:
             Dsl
                 HintPath =“../../ExternLibrary/Dsl.dll”
             LitJson
                 HintPath =“../../ExternLibrary/LitJson.dll”
             System
             UnityEngine
                 HintPath =“../../ExternLibrary/UnityEngine.dll”
             UnityEngine.UI
                 HintPath =“../../ExternLibrary/UnityEngine.UI.dll”
             System.Core
         AssemblyFiles:
             /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll
             /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll
         CandidateAssemblyFiles:
         TargetFrameworkDirectories:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/,/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         InstalledAssemblyTables:
         IgnoreInstalledAssemblyTable:
             False
         SearchPaths:
             {CandidateAssemblyFiles}
             {HintPathFromItem}
             {TargetFrameworkDirectory}
             {Registry:Software/Microsoft/.NETFramework,v4.6,AssemblyFoldersEx}
             {AssemblyFolders}
             {GAC}
             {RawFileName}
             bin/Debug/
         AllowedAssemblyExtensions:
             .winmd
             .dll
             .exe
         AllowedRelatedFileExtensions:
             .pdb
             .dll.mdb
             .exe.mdb
             .xml
             .pri
             .dll.config
             .exe.config
         AppConfigFile:
             
         AutoUnify:
             True
         CopyLocalDependenciesWhenParentReferenceInGac:
             True
         FindDependencies:
             True
         TargetProcessorArchitecture:
             msil
         StateFile:
             obj/Debug/GameKernel.csprojAssemblyReference.cache
         InstalledAssemblySubsetTables:
         IgnoreInstalledAssemblySubsetTable:
             False
         TargetFrameworkSubsets:
         FullTargetFrameworkSubsetNames:
             Full
         ProfileName:
             
         FullFrameworkFolders:
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/
             /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/
         LatestTargetFrameworkDirectories:
         ProfileTablesLocation:
         主引用“Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”。
             在搜索路径位置“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”找到引用。
             找到相关文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“StoryScript, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll”。
             在搜索路径位置“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll”找到引用。
             找到相关文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.pdb”。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”。
             在搜索路径位置“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll”找到引用。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“Dsl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             找到相关文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.pdb”。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“LitJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         主引用“UnityEngine.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用的 ImageRuntimeVersion 是“”。
         统一主引用“System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”中的原始版本“3.5.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll”中的原始版本“3.5.0.0”，因为 AutoUnify 为“true”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”中的原始版本“3.5.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Core.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.winmd”，但它不存在。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         依赖项“UnityEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”。
             在搜索路径位置“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”找到引用。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.winmd”，但它不存在。
             “UnityEngine.UI”所必需的。
             此引用的 ImageRuntimeVersion 是“”。
         依赖项“Unity.Cecil, Version=0.10.0.0, Culture=neutral, PublicKeyToken=fc15b93552389f74”。
             未能解析此引用。未能找到程序集“Unity.Cecil, Version=0.10.0.0, Culture=neutral, PublicKeyToken=fc15b93552389f74”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Cecil.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Cecil.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Cecil.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Cecil.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Unity.Cecil, Version=0.10.0.0, Culture=neutral, PublicKeyToken=fc15b93552389f74”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Unity.Cecil.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Unity.Cecil.dll”，但它不存在。
                 已考虑使用“bin/Debug/Unity.Cecil.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         依赖项“Unity.SerializationLogic, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“Unity.SerializationLogic, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.SerializationLogic.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.SerializationLogic.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.SerializationLogic.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.SerializationLogic.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Unity.SerializationLogic, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Unity.SerializationLogic.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Unity.SerializationLogic.dll”，但它不存在。
                 已考虑使用“bin/Debug/Unity.SerializationLogic.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         依赖项“Unity.DataContract, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“Unity.DataContract, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.DataContract.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.DataContract.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.DataContract.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.DataContract.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Unity.DataContract, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Unity.DataContract.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Unity.DataContract.dll”，但它不存在。
                 已考虑使用“bin/Debug/Unity.DataContract.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         依赖项“ExCSS.Unity, Version=2.0.6.0, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“ExCSS.Unity, Version=2.0.6.0, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/ExCSS.Unity.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/ExCSS.Unity.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/ExCSS.Unity.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/ExCSS.Unity.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“ExCSS.Unity, Version=2.0.6.0, Culture=neutral, PublicKeyToken=null”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/ExCSS.Unity.winmd”，但它不存在。
                 已考虑使用“bin/Debug/ExCSS.Unity.dll”，但它不存在。
                 已考虑使用“bin/Debug/ExCSS.Unity.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         统一依赖项“System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             使用此版本而不是“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”中的原始版本“2.0.0.0”，因为 AutoUnify 为“true”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Xml.dll”。
             在搜索路径位置“{TargetFrameworkDirectory}”找到引用。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Xml.winmd”，但它不存在。
             “UnityEngine.UI”所必需的。
             此引用不是“CopyLocal”，因为它位于 Frameworks 目录中。
             此引用的 ImageRuntimeVersion 是“”。
         依赖项“System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/gac/System.Xml.Linq/4.0.0.0__b77a5c561934e089/System.Xml.Linq.dll”。
             在搜索路径位置“{GAC}”找到引用。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.Linq.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.Linq.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/System.Xml.Linq.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.Linq.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.Linq.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/System.Xml.Linq.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Xml.Linq.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Xml.Linq.dll”，
         			但它的名称“System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”
         			与预期名称“System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”不匹配。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Xml.Linq.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/System.Xml.Linq.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
             找到相关文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/gac/System.Xml.Linq/4.0.0.0__b77a5c561934e089/System.Xml.Linq.pdb”。
             此引用不是“CopyLocal”，因为它是在 GAC 中注册的。
             此引用的 ImageRuntimeVersion 是“”。
         依赖项“Unity.Legacy.NRefactory, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“Unity.Legacy.NRefactory, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.Legacy.NRefactory.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.Legacy.NRefactory.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.Legacy.NRefactory.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.Legacy.NRefactory.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Unity.Legacy.NRefactory, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Unity.Legacy.NRefactory.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Unity.Legacy.NRefactory.dll”，但它不存在。
                 已考虑使用“bin/Debug/Unity.Legacy.NRefactory.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         依赖项“Unity.UNetWeaver, Version=1.0.7199.35666, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“Unity.UNetWeaver, Version=1.0.7199.35666, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Unity.UNetWeaver.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Unity.UNetWeaver.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Unity.UNetWeaver.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Unity.UNetWeaver.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Unity.UNetWeaver, Version=1.0.7199.35666, Culture=neutral, PublicKeyToken=null”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Unity.UNetWeaver.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Unity.UNetWeaver.dll”，但它不存在。
                 已考虑使用“bin/Debug/Unity.UNetWeaver.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
         依赖项“Boo.Lang, Version=2.0.9.5, Culture=neutral, PublicKeyToken=32c39770e9a21a67”。
             未能解析此引用。未能找到程序集“Boo.Lang, Version=2.0.9.5, Culture=neutral, PublicKeyToken=32c39770e9a21a67”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
                 用于 SearchPath“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary”。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Boo.Lang.dll”，但它不存在。
                 已考虑使用“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Boo.Lang.exe”，但它不存在。
                 用于 SearchPath“{TargetFrameworkDirectory}”。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Boo.Lang.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/xbuild-frameworks/.NETFramework/v4.6/Boo.Lang.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Boo.Lang.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Boo.Lang.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.exe”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.dll”，但它不存在。
                 已考虑使用“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/Facades/Boo.Lang.exe”，但它不存在。
                 用于 SearchPath“{GAC}”。
                 已考虑使用“Boo.Lang, Version=2.0.9.5, Culture=neutral, PublicKeyToken=32c39770e9a21a67”，但未在 GAC 中找到它。
                 用于 SearchPath“bin/Debug/”。
                 已考虑使用“bin/Debug/Boo.Lang.winmd”，但它不存在。
                 已考虑使用“bin/Debug/Boo.Lang.dll”，但它不存在。
                 已考虑使用“bin/Debug/Boo.Lang.exe”，但它不存在。
             “UnityEngine.UI”所必需的。
       已完成执行任务“ResolveAssemblyReference”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_RemoveZipFileSuggestedRedirect”；('$(_TargetFrameworkVersionWithoutV)' >= '4.7.1' And '$(AllowZipFileRedirect)' != 'true')的计算结果为('4.6' >= '4.7.1' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)'))的计算结果为('' == 'true' and '' == 'true' and Exists('obj/Debug/GameKernel.dll.config'))。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AfterResolveReferences”的操作。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.NETFramework.CurrentVersion.targets”中的目标“ImplicitlyExpandDesignTimeFacades”(目标“ResolveReferences”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ImplicitlyExpandDesignTimeFacades”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResolveReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj/project.assets.json'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“CopyAdditionalFiles”(目标“AssignTargetPaths”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CopyAdditionalFiles”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignTargetPath”任务。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and ''=='.manifest')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignCulture”任务。
       任务“AssignCulture”
       已完成执行任务“AssignCulture”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“SplitResourcesByCulture”的操作。
       由于条件的计算结果为 false，已跳过目标“CreateManifestResourceNames”；('@(EmbeddedResource)' != '')的计算结果为('' != '')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CreateCustomManifestResourceNames”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“PrepareResources”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“PrepareResourceNames”的操作。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       已跳过目标“SplitResourcesByCulture”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”(目标“ResGen”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BeforeResGen”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“CoreResGen”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreResGen”(目标“ResGen”依赖于它):
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' != 'CLR2')。
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2')计算为('' == 'Resx' and '' != 'false' and '' == 'CLR2')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CoreResGen”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterResGen”(目标“ResGen”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AfterResGen”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”(目标“PrepareResources”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“ResGen”的操作。
       由于条件的计算结果为 false，已跳过目标“CompileLicxFiles”；('@(_LicxFile)'!='')的计算结果为(''!='')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResources”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“PrepareResources”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or  == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       已跳过目标“ResolveNativeReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SetExternalWin32ManifestProperties”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='')的计算结果为(''=='true' or ''!='' or ''!='')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_SetEmbeddedWin32ManifestProperties”(目标“SetWin32ManifestProperties”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetFrameworkPath”任务。
       任务“GetFrameworkPath”
       已完成执行任务“GetFrameworkPath”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_SetEmbeddedWin32ManifestProperties”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“SetWin32ManifestProperties”(目标“Compile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“SetWin32ManifestProperties”的操作。
       已跳过目标“FindReferenceAssembliesForReferences”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileInputs”(目标“Compile”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_GenerateCompileInputs”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileShouldRun”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GenerateMSBuildEditorConfigFileShouldRun”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateMSBuildEditorConfigFileCore”；('$(_GeneratedEditorConfigShouldRun)' == 'true')的计算结果为('' == 'true')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFile”(目标“BeforeCompile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GenerateMSBuildEditorConfigFile”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets”中的目标“_SetTargetFrameworkMonikerAttribute”(目标“GenerateTargetFrameworkMonikerAttribute”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_SetTargetFrameworkMonikerAttribute”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”(目标“BeforeCompile”依赖于它):
       正在跳过目标“GenerateTargetFrameworkMonikerAttribute”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.targets
       输出文件:obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GenerateTargetFrameworkMonikerAttribute”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateAdditionalSources”；('@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true')的计算结果为('' != '' and '' == 'true')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“BeforeCompile”(目标“Compile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“BeforeCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampBeforeCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileDependencyCache”(目标“Compile”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Hash”任务。
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_GenerateCompileDependencyCache”的操作。
       由于条件的计算结果为 false，已跳过目标“_ComputeNonExistentFileProperty”；(('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true')))的计算结果为(('' == 'true') and ('' != 'true') and (('true' == 'false') or ('true' == 'true')))。
       由于条件的计算结果为 false，已跳过目标“ResolveCodeAnalysisRuleSet”；('$(CodeAnalysisRuleSet)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll;...' == '')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_BeforeVBCSCoreCompile”(目标“CoreCompile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_BeforeVBCSCoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll;/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll;...' == '')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Managed.Core.targets”中的目标“_ComputeSkipAnalyzers”(目标“CoreCompile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_ComputeSkipAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPathMapFromSourceRoots”；('$(DeterministicSourcePaths)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“CreateCompilerGeneratedFilesOutputPath”；('$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'))的计算结果为('false' == 'true' and !('' == 'true' OR 'true' != 'true'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.CSharp.Core.targets”中的目标“CoreCompile”(目标“Compile”依赖于它):
       正在完全生成目标“CoreCompile”。
       输出文件“obj/Debug/GameKernel.dll”不存在。
       正在使用程序集“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Csc”任务。
       任务“Csc”
         /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn/csc.exe /noconfig /unsafe+ /nowarn:1701,1702 /fullpaths /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;DEBUG;ROBOT /highentropyva+ /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/mscorlib.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.Core.dll /reference:/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/4.6-api/System.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll /reference:/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll /debug+ /debug:full /filealign:512 /optimize- /out:obj/Debug/GameKernel.dll /subsystemversion:6.00 /target:library /utf8output /langversion:7.3 Ai/AiCommand.cs Ai/AiLogicUtility.cs Ai/AiRegister.cs Scene/ObjectKdTree.cs Scene/SceneSystem.cs GameObjects/ObjectInfo/Entity_NpcType.cs Scene/SceneSystem_Ai.cs Scene/SceneSystem_Entity.cs GameController.cs GameObjects/AiInfo/AiInfo.cs GameObjects/AiInfo/NpcAiData.cs GameObjects/EntityInfoDictionary.cs GameObjects/EntityManager.cs GameObjects/EntityKdTree.cs GameObjects/MovementInfo/MovementInfo.cs GameObjects/ObjectInfo/CharacterDefines.cs GameObjects/ObjectInfo/CharacterProperty.cs GameObjects/ObjectInfo/Entity_Base.cs GameObjects/ObjectInfo/Entity_Npc.cs GameObjects/SceneSharedData/BlackBoard.cs GameObjectViews/EntityViewModelManager.cs GameObjectViews/EntityViewModel_Base.cs GameObjectViews/EntityViewModel_Npc.cs GmCommands/ClientGmStorySystem.cs GmCommands/GmCommands.cs Properties/AssemblyInfo.cs Resource/AbstractScriptBehavior.cs Resource/ResourceSystem.cs Ai/AiCommand/AiChase.cs Ai/AiCommand/AiGohome.cs Ai/AiCommand/AiKeepAway.cs Ai/AiCommand/AiRandMove.cs Ai/AiValue/AiGetTarget.cs Ai/AiValue/AiNeedChase.cs Ai/AiValue/AiNeedKeepAway.cs Ai/AiValue/AiQuey.cs Ai/AiValue/AiSelectTarget.cs Story/Commands/GameLogicCommands.cs Story/Commands/GeneralCommands.cs Story/ClientStorySystem.cs Story/UiStoryEventHandler.cs Story/UiStoryInitializer.cs Story/Values/GameLogicValues.cs Story/Values/GeneralValues.cs UtilityForClient/Logger.cs UtilityForClient/Utility.cs Story/Commands/NpcCommands.cs Story/Commands/ObjectCommands.cs Story/Values/ObjectValues.cs Story/Values/NpcValues.cs "obj/Debug/.NETFramework,Version=v4.6.AssemblyAttributes.cs"
         Using shared compilation with compiler from directory: /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Roslyn
         Microsoft (R) Visual C# Compiler version 3.9.0-6.21124.20 (db94f4cc)
         Copyright (C) Microsoft Corporation. All rights reserved.
   3:2>/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1615,22): warning CS0414: The field 'CreateGameObjectCommand.m_NeedLoad' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]
   3:2>/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1617,21): warning CS0414: The field 'CreateGameObjectCommand.m_WaitTime' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]
   3:2>/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1616,22): warning CS0414: The field 'CreateGameObjectCommand.m_IsLoaded' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]
       已完成执行任务“Csc”的操作。
       由于 false 条件，已跳过任务“CallTarget”；('$(TargetsTriggeredByCompilation)' != '')计算为('' != '')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampAfterCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterCompile”(目标“Compile”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AfterCompile”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Compile”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“Compile”的操作。
       由于条件的计算结果为 false，已跳过目标“ExportWindowsMDFile”；('$(ExportWinMDFile)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj/GameKernel.csproj.UnmanagedRegistration.cache'))。
       由于条件的计算结果为 false，已跳过目标“GenerateSerializationAssemblies”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateSatelliteAssemblyInputs”(目标“CreateSatelliteAssemblies”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_GenerateSatelliteAssemblyInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“GenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != '' and '$(GenerateSatelliteAssembliesForCore)' != 'true')的计算结果为('' != '' and '' != 'true')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CreateSatelliteAssemblies”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CreateSatelliteAssemblies”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.Mono.targets”中的目标“GenerateManifests”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GenerateManifests”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”(目标“GetTargetPath”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GetTargetPathWithTargetPlatformMoniker”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPath”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GetTargetPath”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopyFilesMarkedCopyLocal”(目标“CopyFilesToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Copy”任务。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEngine.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/StoryScript.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEngine.UI.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEngine.UI.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Common.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Dsl.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/LitJson.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/LitJson.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/UnityEditor.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/UnityEditor.dll”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/bin/Debug/Common.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Common.pdb”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/ExternLibrary/Dsl.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/Dsl.pdb”。
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/bin/Debug/StoryScript.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/StoryScript.pdb”。
       已完成执行任务“Copy”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Touch”任务。
       任务“Touch”
         正在创建“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.csproj.CopyComplete”，因为已指定“AlwaysCreate”。
       已完成执行任务“Touch”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_CopyFilesMarkedCopyLocal”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_SplitProjectReferencesByFileExistence”。以前的生成已成功。
       已跳过目标“_GetProjectReferenceTargetFrameworkProperties”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”(目标“GetCopyToOutputDirectoryItems”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToOutputDirectoryItems”(目标“_CopySourceItemsToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CallTarget”任务。
       任务“CallTarget”
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       已跳过目标“_AddOutputPathToGlobalPropertiesToRemove”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“MSBuild”
         全局属性:
           Configuration=Debug
           Platform=AnyCPU
         移除项目“../../Infrastructure/Common/Common.csproj”的属性:
           TargetFramework
         移除项目“../../Infrastructure/StoryScript/StoryScript.csproj”的属性:
           TargetFramework
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 3 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(4:12) (GetCopyToOutputDirectoryItems 个目标)。
  4:12>正在使用工具版本“Current”进行生成。
       已跳过目标“GetCopyToOutputDirectoryItems”。以前的生成已成功。
  4:12>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/Common/Common.csproj”(GetCopyToOutputDirectoryItems 个目标)的操作。
   3:2>项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(3:2)正在节点 1 上生成“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(2:7) (GetCopyToOutputDirectoryItems 个目标)。
   2:7>正在使用工具版本“Current”进行生成。
       已跳过目标“GetCopyToOutputDirectoryItems”。以前的生成已成功。
   2:7>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(GetCopyToOutputDirectoryItems 个目标)的操作。
   3:2>已完成执行任务“MSBuild”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”的操作。
       已完成执行任务“CallTarget”的操作。
       任务“CallTarget”
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromThisProject”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromThisProject”的操作。
       已完成执行任务“CallTarget”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“GetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectory)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectoryAlways”；( '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' )的计算结果为( '' != '' )。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CopySourceItemsToOutputDirectory”(目标“CopyFilesToOutputDirectory”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_CopySourceItemsToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyAppConfigFile”；( '@(AppConfigWithTargetPath)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyManifestFiles”；( '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' )的计算结果为( ''=='true' or ''=='true' )。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“CopyFilesToOutputDirectory”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CopyFilesToOutputDirectory”(目标“PrepareForRun”依赖于它):
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.dll”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/GameKernel.dll”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“CopyRefAssembly”；('$(ProduceReferenceAssembly)' == 'true' and '$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true')计算为('false' == 'true' and 'true' == 'true' and '' != 'true')。
       任务“Message”
         GameKernel -> /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/GameKernel.dll
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Copy”；('@(AddModules)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('$(_SGenDllCreated)'=='true')计算为('false'=='true')。
       任务“Copy”
         正在将文件从“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.pdb”复制到“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/bin/Debug/GameKernel.pdb”。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“Copy”；('$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true')计算为('false'=='true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('@(IntermediateSatelliteAssembliesWithTargetPath)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' )计算为('' != '' or '' != '' or '' != '' or '' != '' )。
       由于 false 条件，已跳过任务“Copy”；('$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != '')计算为('' != 'true' and '' != '')。
       由于 false 条件，已跳过任务“Message”；('$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != '')计算为('' != 'true' and '' != '')。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CopyFilesToOutputDirectory”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForRun”(目标“CoreBuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“PrepareForRun”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedRegistration”；('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')的计算结果为(''=='true' and 'Library'=='library')。
       已跳过目标“_CheckForCompileOutputs”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“IncrementalClean”依赖于它):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ConvertToAbsolutePath”任务。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       任务“FindUnderPath”
         比较路径为“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“IncrementalClean”(目标“CoreBuild”依赖于它):
       任务“FindUnderPath”
         比较路径为“bin/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj/Debug/”。
       已完成执行任务“FindUnderPath”的操作。
       任务“Delete”
         文件“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/obj/Debug/GameKernel.csproj.AssemblyReference.cache”不存在。正在跳过。
       已完成执行任务“Delete”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
   3:2>已完成在项目“GameKernel.csproj”中生成目标“IncrementalClean”的操作。
       由于条件的计算结果为 false，已跳过目标“PostBuildEvent”；('$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)'))的计算结果为('' != '' and ('' != 'OnOutputUpdated' or '' != ''))。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“CoreBuild”(目标“Build”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“CoreBuild”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterBuild”(目标“Build”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AfterBuild”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Build”(目标“Rebuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“Build”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“AfterRebuild”(目标“Rebuild”依赖于它):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“AfterRebuild”的操作。
   3:2>来自项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”的文件“/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.Common.CurrentVersion.targets”中的目标“Rebuild”(入口点):
   3:2>已完成在项目“GameKernel.csproj”中生成目标“Rebuild”的操作。
   3:2>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(Rebuild 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
     1>已完成在项目“GameLibrary.sln”中生成目标“Rebuild”的操作。
     1>已完成生成项目“/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(clean;rebuild 个目标)的操作。

已成功生成。

       “/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(clean;rebuild 目标) (1) ->
       “/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj”(Rebuild 目标) (2:4) ->
       (ResolveCodeAnalysisRuleSet 目标) -> 
         /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Microsoft.CSharp.CurrentVersion.targets(142,9): warning MSB3884: 无法找到规则集文件“MinimumRecommendedRules.ruleset”。 [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/Infrastructure/StoryScript/StoryScript.csproj]


       “/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/GameLibrary.sln”(clean;rebuild 目标) (1) ->
       “/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj”(Rebuild 目标) (3:2) ->
       (CoreCompile 目标) -> 
         /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1615,22): warning CS0414: The field 'CreateGameObjectCommand.m_NeedLoad' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]
         /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1617,21): warning CS0414: The field 'CreateGameObjectCommand.m_WaitTime' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]
         /Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/Story/Commands/GeneralCommands.cs(1616,22): warning CS0414: The field 'CreateGameObjectCommand.m_IsLoaded' is assigned but its value is never used [/Users/bytedance/Documents/GitHub/GameDemo/GameLibrary/App/GameKernel/GameKernel.csproj]

    4 个警告
    0 个错误

已用时间 00:00:05.15
